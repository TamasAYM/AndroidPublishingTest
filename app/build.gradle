plugins {
	id 'com.android.application'
	id 'kotlin-android'
	id 'com.github.triplet.play' version '2.2.1'
}
apply plugin: 'com.github.triplet.play'
apply plugin: 'jacoco'
if (!rootProject.plugins.hasPlugin("org.sonarqube")) {
	apply plugin: 'org.sonarqube'
}

apply from: '../versioning.gradle'

android {
	compileSdkVersion 28
	defaultConfig {
		applicationId "hu.tvarga.androidpublishingtestnew"
		minSdkVersion 21
		targetSdkVersion 28
		versionCode readVersionCode(project)
		versionName readVersionName(project)
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}
	signingConfigs {
		release {
			storeFile file("../etc/not-encrypted-dev-new.jks")
			keyAlias "key0"
			storePassword "jelszopassword"
			keyPassword "jelszopassword"

		}
	}
	flavorDimensions 'environment'

	productFlavors {

		// Includes settings you want to keep only while developing your app.
		envUs {
			dimension 'environment'
			applicationIdSuffix ".us"
		}
		envCa {
			dimension 'environment'
			applicationIdSuffix ".ca"
		}
		envJp {
			dimension 'environment'
			applicationIdSuffix ".jp"
		}
	}
	buildTypes {
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

			signingConfig signingConfigs.release
		}
		debug {
			testCoverageEnabled true
		}
		uat {
			matchingFallbacks = ['debug', 'release']

			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

			signingConfig signingConfigs.release
		}
	}

	bundle {
		language {
			enableSplit = false
		}
		density {
			enableSplit = true
		}
		abi {
			enableSplit = true
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}


	dynamicFeatures = [":dynamicfeature"]


}

play {
	serviceAccountCredentials = file("../etc/service.json")
	artifactDir = file("build/outputs/bundle/envUsRelease")
	track = "alpha"
	userFraction = 1.0
	releaseStatus = "draft"
	defaultToAppBundles = true
}

apply from: 'tasks.gradle'
apply from: '../release-notes.gradle'

dependencies {
	api 'androidx.appcompat:appcompat:1.0.0'
	api 'androidx.constraintlayout:constraintlayout:1.1.3'
	api "com.google.android.play:core:1.6.4"
	api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'androidx.test.ext:junit:1.1.1'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}

def getAndroidTestCoverageFiles() {
	FileCollection androidTestCoverageFiles = fileTree("$buildDir/outputs/code-coverage/connected") {
		include "**/*.ec"
	}
	return androidTestCoverageFiles
}

sonarqube {
	properties {
		property "sonar.jacoco.itReportPath", getAndroidTestCoverageFiles()
		// NOTE: By default the java source set and not the android source set is used
		property "sonar.sources", android.sourceSets.main.java.srcDirs

		property "sonar.tests", "src/test/java"
		property "sonar.java.binaries", "${buildDir}/intermediates/javac/envUsDebug/compileEnvUsDebugJavaWithJavac/classes"
		property "sonar.java.test.binaries", "${buildDir}/intermediates/javac/envUsDebugUnitTest/compileEnvUsDebugUnitTestJavaWithJavac/classes"
		property "sonar.jacoco.reportPaths", "${buildDir}/jacoco/testEnvUsDebugUnitTest.exec"
		property "sonar.junit.reportsPath", "${buildDir}/test-results/testEnvUsDebugUnitTest"

		// sonar lint plugin
		//
		// ATTENTION: this file must match the chosen build flavor in the
		// CI build configurations, otherwise lint issues will not be visible in the sonar
		// report. CI Build Configs:
		//  - Android CI -> Sonar preview report generation
		//  - Android Master Sonar ->  SonarQube
		property "sonar.android.lint.report", "${buildDir}/reports/lint-results-envUsDebug.xml"
	}
}
