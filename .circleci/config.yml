version: 2

references:
  ## Cache

  cache_key: &cache_key
    key: cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - .gradle
        - ~/.gradle
        - ~/.m2

  ## Workspace

  workspace: &workspace
    ~/workspace
  attach_debug_workspace: &attach_debug_workspace
    attach_workspace:
      at: *workspace
  persist_debug_workspace: &persist_debug_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build/intermediates
        - app/build/outputs/androidTest-results
        - app/build/outputs/apk
        - app/build/outputs/mapping
        - app/build/outputs/code-coverage
        - app/build/test-results
        - app/build/jacoco
  attach_firebase_workspace: &attach_firebase_workspace
    attach_workspace:
      at: *workspace
  persist_firebase_workspace: &persist_firebase_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - firebase

  ## Docker image configurations

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      TERM: dumb
      JVM_OPTS: -Xmx3200m

  export_console_key: &export_console_key
    run:
      name: Export Google console Service key environment variable
      command: echo 'export CONSOLE_SERVICE_KEY="$CONSOLE_SERVICE_KEY"' >> $BASH_ENV
  decode_console_key: &decode_console_key
    run:
      name: Decode Google console credentials
      command: echo $CONSOLE_SERVICE_KEY | base64 -di > ${HOME}/workspace/etc/key.json

jobs:

  ## Build debug APK and instrumented test APK run unit tests and list

  test:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - run:
          name: test
          command: if [[ ! -z $CIRCLE_PULL_REQUEST ]] ; then ./gradlew testDebugUnitTest --parallel ; else ./gradlew assembleDebug testDebugUnitTest --parallel ; fi
      - *save_cache
      - *persist_debug_workspace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/
      - store_artifacts:
          path: app/build/reports
          destination: app-reports
      - store_test_results:
          paths:
             - app/build/test-results

  app:
    <<: *android_config
    environment:
      FL_OUTPUT_DIR: ~/workspace
      FASTLANE_LANE: app
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Set Ruby Version
          command:  echo "ruby-2.4" > ~/.ruby-version
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
          no_output_timeout: 20m
      - *persist_debug_workspace
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release.apk
      - store_artifacts:
          path: app/build/outputs/mapping/release/mapping.txt

  app_deploy:
    <<: *android_config
    environment:
      FL_OUTPUT_DIR: ~/workspace
      FASTLANE_LANE: app_deploy
    steps:
      - checkout
      - *attach_debug_workspace
      - *export_console_key
      - *decode_console_key
      - run:
          name: Set Ruby Version
          command:  echo "ruby-2.4" > ~/.ruby-version
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
          no_output_timeout: 20m

  increment_version:
    <<: *android_config
    environment:
      FL_OUTPUT_DIR: ~/workspace
      FASTLANE_LANE: increment_version
    steps:
      - checkout
      - run:
          name: Set Ruby Version
          command:  echo "ruby-2.4" > ~/.ruby-version
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
          no_output_timeout: 20m
      - run:
          name: Commit build version
          command: ./scripts/pushNewVersion.sh

workflows:
  version: 2
  workflow:
    jobs:
      - test
      - app:
          filters:
              branches:
                only: master
          requires:
              - test
      - app_deploy_approve:
          filters:
              branches:
                only: master
          type: approval
          requires:
            - app
      - app_deploy:
          filters:
              branches:
                only: master
          requires:
            - app_deploy_approve
      - increment_version:
          filters:
              branches:
                only: master
          requires:
            - app